{
  "fileName": "Insurance.sol",
  "contractName": "Insurance",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.12;\n\nimport \"./RewardsAndPenalties.sol\";\n\n\ncontract Insurance is RewardsAndPenalties {\n    uint private constant BASE_INSURANCE_FOR_BP = 3500; // trigger insurance with contract balance fall below 35%\n    uint private constant OPT_IN_INSURANCE_FEE_BP = 1000; // 10%\n    uint private constant OPT_IN_INSURANCE_FOR_BP = 10000; // 100%\n\n    bool public isInInsuranceState = false; // if contract is only allowing insured money this becomes true;\n\n    function _checkForBaseInsuranceTrigger() internal {\n        if (fourRXToken.balanceOf(address(this)) <= _calcPercentage(maxContractBalance, BASE_INSURANCE_FOR_BP)) {\n            isInInsuranceState = true;\n        } else {\n            isInInsuranceState = false;\n        }\n    }\n\n    function _getInsuredAvailableAmount(Stake memory stake, uint withdrawalAmount) internal pure returns (uint)\n    {\n        uint availableAmount = withdrawalAmount;\n        // Calc correct insured value by checking which insurance should be applied\n        uint insuredFor = BASE_INSURANCE_FOR_BP;\n        if (stake.optInInsured) {\n            insuredFor = OPT_IN_INSURANCE_FOR_BP;\n        }\n\n        uint maxWithdrawalAllowed = _calcPercentage(stake.deposit, insuredFor);\n\n        require(maxWithdrawalAllowed >= stake.withdrawn.add(stake.penalty)); // if contract is in insurance trigger, do not allow withdrawals for the users who already have withdrawn more then 35%\n\n        if (stake.withdrawn.add(availableAmount).add(stake.penalty) > maxWithdrawalAllowed) {\n            availableAmount = maxWithdrawalAllowed.sub(stake.withdrawn).sub(stake.penalty);\n        }\n\n        return availableAmount;\n    }\n\n    function _insureStake(address user, Stake storage stake) internal {\n        require(!stake.optInInsured && stake.active);\n        require(fourRXToken.transferFrom(user, address(this), _calcPercentage(stake.deposit, OPT_IN_INSURANCE_FEE_BP)));\n\n        stake.optInInsured = true;\n    }\n}\n",
  "sourcePath": "contracts/Insurance.sol",
  "sourceMap": "96:1884:13:-:0;;;436:70:20;;;-1:-1:-1;;;;;;436:70:20;464:42;436:70;;;391:38:13;;;-1:-1:-1;;391:38:13;;;96:1884;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "96:1884:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;967:44:8;;;:::i;:::-;;;;;;;;;;;;;;;;1129:46;;;:::i;1029:47::-;;;:::i;518:123:17:-;;;:::i;:::-;;163:32:23;;;:::i;436:70:20:-;;;:::i;:::-;;;;-1:-1:-1;;;;;436:70:20;;;;;;;;;;;;;;1460:30;;;:::i;391:38:13:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;476:43:8;;;:::i;352:49:16:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2155:157;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;178:47:15;;;:::i;1331:30:20:-;;;:::i;84:51:8:-;;;:::i;97:31:21:-;;;:::i;301:45:16:-;;;:::i;134:23:21:-;;;:::i;1402:37:8:-;;;:::i;125:47:18:-;;;;;;;;;;;;;;;;-1:-1:-1;125:47:18;;:::i;:::-;;;;-1:-1:-1;;;;;125:47:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:34:8;;;:::i;178:334:17:-;;;;;;;;;;;;;;;;-1:-1:-1;178:334:17;;-1:-1:-1;;;;;178:334:17;;;;;;;;;;;;;:::i;376:45:8:-;;;:::i;1213:38:20:-;;;;;;;;;;;;;;;;-1:-1:-1;1213:38:20;-1:-1:-1;;;;;1213:38:20;;:::i;404:25::-;;;:::i;2318:1618:16:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:44:8;;;:::i;1368:23:20:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1497:22;;;:::i;1258:28::-;;;;;;;;;;;;;;;;-1:-1:-1;1258:28:20;;:::i;1428:26::-;;;:::i;792:51:8:-;;;:::i;1292:32:20:-;;;;;;;;;;;;;;;;-1:-1:-1;1292:32:20;;:::i;892:44:8:-;;;:::i;1067:1056:16:-;;;:::i;128:43:17:-;;;;;;;;;;;;;;;;-1:-1:-1;128:43:17;;:::i;688:46:8:-;;;:::i;1397:24:20:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;967:44:8;1006:5;967:44;:::o;1129:46::-;1172:3;1129:46;:::o;1029:47::-;1075:1;1029:47;:::o;518:123:17:-;565:19;572:12;;565:19;:::i;:::-;594:40;621:12;594:26;:40::i;:::-;518:123::o;163:32:23:-;190:5;163:32;:::o;436:70:20:-;;;-1:-1:-1;;;;;436:70:20;;:::o;1460:30::-;;;;:::o;391:38:13:-;;;;;;:::o;476:43:8:-;515:4;476:43;:::o;352:49:16:-;399:2;352:49;:::o;2155:157::-;2247:10;;2270:18;;2290:14;;2247:10;;;;;;2259:9;;2155:157;;:::o;178:47:15:-;220:5;178:47;:::o;1331:30:20:-;;;;:::o;84:51:8:-;130:5;84:51;:::o;97:31:21:-;;;;:::o;301:45:16:-;344:2;301:45;:::o;134:23:21:-;;;;:::o;1402:37:8:-;1436:3;1402:37;:::o;125:47:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;125:47:18;;;-1:-1:-1;;;;125:47:18;;;;;-1:-1:-1;;;125:47:18;;;;;;:::o;153:34:8:-;186:1;153:34;:::o;178:334:17:-;269:54;295:12;309:4;315:7;269:25;:54::i;:::-;264:242;;339:61;364:12;378:4;384:6;392:7;339:24;:61::i;:::-;264:242;;;431:64;459:12;473:4;479:6;487:7;431:27;:64::i;:::-;178:334;;;:::o;376:45:8:-;419:2;376:45;:::o;1213:38:20:-;;;;;;;;;;;;-1:-1:-1;;;;;1213:38:20;;:::o;404:25::-;;;-1:-1:-1;;;;;404:25:20;;:::o;2318:1618:16:-;2372:16;;;;;;;399:2;2525:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2525:37:16;-1:-1:-1;2614:35:16;;;399:2;2614:35;;;;;;;;;2480:82;;-1:-1:-1;2572:39:16;;2614:35;;;;;;;;;-1:-1:-1;;2699:34:16;;;399:2;2699:34;;;;;;;;;2572:77;;-1:-1:-1;2659:37:16;;2699:34;-1:-1:-1;2699:34:16;;;;;;;;-1:-1:-1;;2785:33:16;;;344:2;2785:33;;;;;;;;;2659:74;;-1:-1:-1;2744:38:16;;2785:33;-1:-1:-1;2785:33:16;;;;;;;;-1:-1:-1;;2866:31:16;;;344:2;2866:31;;;;;;;;;2744:74;;-1:-1:-1;2828:35:16;;2866:31;-1:-1:-1;2866:31:16;;;;;;;;-1:-1:-1;;2943:30:16;;;344:2;2943:30;;;;;;;;;2828:69;;-1:-1:-1;2907:33:16;;2943:30;-1:-1:-1;2943:30:16;;;;;;;;;;-1:-1:-1;2943:30:16;2907:66;;2984:8;3006:36;;:::i;:::-;3045:16;3062:1;3045:19;;;;;;;;;;;;;;;;;;;3006:58;;;;;;;;3045:19;;;;;;;;3006:58;;-1:-1:-1;;;;;3006:58:16;;;;-1:-1:-1;;;3006:58:16;;;;;;;;;;;-1:-1:-1;;;3006:58:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;3075:326:16;399:2;3082:26;;;;:68;;;;-1:-1:-1;3112:12:16;;;;:38;;;;3082:68;3075:326;;;3176:16;3193:7;:12;;;3176:30;;;;;;;;;;;;;;;;;;;3166:40;;;;;;;;3176:30;;;;;;;;3166:40;;-1:-1:-1;;;;;3166:40:16;;;;;-1:-1:-1;;;3166:40:16;;;;;;;;;;;;;-1:-1:-1;;;3166:40:16;;;;;;;;;;;;;;;;;;;3220:28;;3166:40;;-1:-1:-1;3166:40:16;3220:28;;;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;3220:43:16;;;-1:-1:-1;;;;;3220:43:16;;;;;3307:7;:10;;;3277:24;3302:1;3277:27;;;;;;;;;;;;;;;:40;;;;;;;;;;;3360:7;:13;;;3331:23;3355:1;3331:26;;;;;;;;;;;;;;;;;;;:42;3387:3;;;;;3075:326;;;3436:12;:15;;3415:1;;-1:-1:-1;3415:1:16;;3436:15;;;;;;;;;;;;;3426:25;;;;;;;;3436:15;;;;;;;;3426:25;;-1:-1:-1;;;;;3426:25:16;;;;-1:-1:-1;;;3426:25:16;;;;;;;;;;;-1:-1:-1;;;3426:25:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;3462:306:16;344:2;3469:22;;;;:64;;;;-1:-1:-1;3495:12:16;;;;:38;;;;3469:64;3462:306;;;3559:12;3572:7;:12;;;3559:26;;;;;;;;;;;;;;;;;;;3549:36;;;;;;;;3559:26;;;;;;;;3549:36;;-1:-1:-1;;;;;3549:36:16;;;;;-1:-1:-1;;;3549:36:16;;;;;;;;;;;;;-1:-1:-1;;;3549:36:16;;;;;;;;;;;;;;;;;;;3599:24;;3549:36;;-1:-1:-1;3549:36:16;3599:24;;;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;3599:39:16;;;-1:-1:-1;;;;;3599:39:16;;;;;3678:7;:10;;;3652:20;3673:1;3652:23;;;;;;;;;;;;;;;:36;;;;;;;;;;;3727:7;:13;;;3702:19;3722:1;3702:22;;;;;;;;;;;;;;;;;;;:38;3754:3;;;;;3462:306;;;-1:-1:-1;3786:25:16;;3813:24;;-1:-1:-1;3839:23:16;;-1:-1:-1;3864:21:16;;-1:-1:-1;3839:23:16;-1:-1:-1;3813:24:16;-1:-1:-1;2318:1618:16;-1:-1:-1;;2318:1618:16:o;199:44:8:-;240:3;199:44;:::o;1368:23:20:-;;;;;;:::o;1497:22::-;;;;:::o;1258:28::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1258:28:20;:::o;1428:26::-;;;;:::o;792:51:8:-;842:1;792:51;:::o;1292:32:20:-;;;;;;;;;;892:44:8;933:3;892:44;:::o;1067:1056:16:-;1126:10;;1139:6;1126:10;;;;;;;:19;1108:37;:15;:37;1104:1013;;;1162:36;;:::i;:::-;1201:12;1214:1;1201:15;;;;;;;;;;;;;;;;1162:54;;;;;;;;1201:15;;;;;;;;1162:54;;-1:-1:-1;;;;;1162:54:16;;;;-1:-1:-1;;;1162:54:16;;;;;;;;;;;-1:-1:-1;;;1162:54:16;;;;;;;;;;;;;;;;;-1:-1:-1;1257:332:16;344:2;1264:22;;;;:64;;;;-1:-1:-1;1290:12:16;;;;:38;;;;1264:64;1257:332;;;1358:12;1371:7;:12;;;1358:26;;;;;;;;;;;;;;;;;;;1348:36;;;;;;;;1358:26;;;;;;;1348:36;;-1:-1:-1;;;;;1348:36:16;;;;;-1:-1:-1;;;1348:36:16;;;;;;;;;;;;-1:-1:-1;;;1348:36:16;;;;;;;;;;;;;;;;;;1518:14;;1534;:17;;1348:36;;-1:-1:-1;1451:102:16;;1502:50;;1534:17;;;;;;;;;;;;;;;;;;1502:15;:50::i;:::-;1451:5;:19;1457:7;:12;;;-1:-1:-1;;;;;1451:19:16;-1:-1:-1;;;;;1451:19:16;;;;;;;;;;;;:26;;1478:7;:10;;;1451:38;;;;;;;;;;;;;;;;;;;;:46;;;:50;;:102;;;;:::i;:::-;1402:5;:19;1408:7;:12;;;-1:-1:-1;;;;;1402:19:16;-1:-1:-1;;;;;1402:19:16;;;;;;;;;;;;:26;;1429:7;:10;;;1402:38;;;;;;;;;;;;;;;;;;:46;:38;;;;;:46;:151;1571:3;;1257:332;;;1613:16;1630:1;1613:19;;;;;;;;;;;;;;;;1603:29;;;;;;;;1613:19;;;;;;;;1603:29;;-1:-1:-1;;;;;1603:29:16;;;;-1:-1:-1;;;1603:29:16;;;;;;;;;;;-1:-1:-1;;;1603:29:16;;;;;;;;;;;;;;;;;-1:-1:-1;1613:19:16;-1:-1:-1;1666:348:16;399:2;1673:26;;;;:68;;;;-1:-1:-1;1703:12:16;;;;:38;;;;1673:68;1666:348;;;1771:16;1788:7;:12;;;1771:30;;;;;;;;;;;;;;;;;;;1761:40;;;;;;;;1771:30;;;;;;;1761:40;;-1:-1:-1;;;;;1761:40:16;;;;;-1:-1:-1;;;1761:40:16;;;;;;;;;;;;-1:-1:-1;;;1761:40:16;;;;;;;;;;;;;;;;;;1935:18;;1955;:21;;1761:40;;-1:-1:-1;1868:110:16;;1919:58;;1955:21;;;;;;;;;1868:110;1819:5;:19;1825:7;:12;;;-1:-1:-1;;;;;1819:19:16;-1:-1:-1;;;;;1819:19:16;;;;;;;;;;;;:26;;1846:7;:10;;;1819:38;;;;;;;;;;;;;;;;;;:46;:38;;;;;:46;:159;1996:3;;1666:348;;;2033:45;2043:14;;2059:18;;2033:45;;;;;;;;;;;;;;;;;;;;;;;;2093:13;:11;:13::i;:::-;1104:1013;;1067:1056::o;128:43:17:-;;;;;;;;;;688:46:8;731:3;688:46;:::o;1397:24:20:-;;;;;;;;;:::o;1101:104:22:-;1172:25;;;;;;;;-1:-1:-1;1172:25:22;;;;;;;;;;;;;;;;;;;;;;1161:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1172:25;1161:37;-1:-1:-1;;;1161:37:22;-1:-1:-1;;;;1172:25:22;1161:37;;;;-1:-1:-1;;;1161:37:22;-1:-1:-1;;;;;;;;;1161:37:22;;;;-1:-1:-1;;;;;;1161:37:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:104::o;2294:419::-;2381:4;2397:19;;:::i;:::-;2419:5;312:1;2419:12;;;;;;;;;;;;;;;;;;2397:34;;;;;;;;2419:12;;;;;;;;2397:34;;-1:-1:-1;;;;;2397:34:22;;;;-1:-1:-1;;;2397:34:22;;;;;;;;;;;-1:-1:-1;;;2397:34:22;;;;;;;;;;;;;;;;;-1:-1:-1;2471:212:22;2477:12;;;;:21;;;2471:212;;2535:4;-1:-1:-1;;;;;2519:20:22;:7;:12;;;-1:-1:-1;;;;;2519:20:22;;:40;;;;;2557:2;2543:16;;:7;:10;;;:16;;;2519:40;2515:115;;;-1:-1:-1;2588:4:22;2610:5;;2515:115;2653:5;2659:7;:12;;;2653:19;;;;;;;;;;;;;;;;;;;2643:29;;;;;;;;2653:19;;;;;;;;2643:29;;-1:-1:-1;;;;;2643:29:22;;;;-1:-1:-1;;;2643:29:22;;;;;;;;;;;-1:-1:-1;;;2643:29:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;2471:212:22;;;2700:6;2294:419;-1:-1:-1;;;;;2294:419:22:o;320:312::-;414:11;428:29;444:5;451;428:15;:29::i;:::-;414:43;;475:32;488:5;495;502:4;475:12;:32::i;:::-;467:41;;;;;;518:5;529:39;;;;;;;;534:4;-1:-1:-1;;;;;529:39:22;;;;;540:5;546:4;540:11;;;;;;;;;;;;;;;;;;;;;;;:16;;-1:-1:-1;;;540:16:22;;;;;;529:39;;;;;;;;;;;;;;;;;518:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;518:51:22;-1:-1:-1;;;;518:51:22;;;;;;;-1:-1:-1;;;;;;;;;518:51:22;;;-1:-1:-1;;;;;;518:51:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:12;;:19;;:16;:19::i;:::-;579:5;585:4;579:11;;;;;;;;;;;;;;;;;;;;:16;;;:46;;;;;;;;;;;;;;;;;;320:312;;;;;:::o;638:457::-;736:14;752;770:40;794:5;801:4;807:2;770:23;:40::i;:::-;735:75;;;;851:7;828:30;;:5;834:7;828:14;;;;;;;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;;828:19:22;;;;:30;820:39;;;;;;900:4;-1:-1:-1;;;;;877:27:22;:5;883:7;877:14;;;;;;;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;877:19:22;:27;869:36;;;;;;944:2;923:23;;:5;929:7;923:14;;;;;;;;;;;;;;;;;;;;;;;:17;-1:-1:-1;;;923:17:22;;;;:23;915:32;;;;;;965:31;975:5;981:7;975:14;;;;;;;;;;;;;;;;;;;;:20;;;965:5;:9;;:31;;;;:::i;:::-;957:39;;1028:5;1034:7;1028:14;;;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;1006:5;1012:7;1006:14;;;;;;;;;;;;;;;;;;;;:19;;;:41;;;;;;;;;;;;;;;;;;1057:31;1065:5;1072:4;1078:5;1085:2;1057:7;:31::i;:::-;638:457;;;;;;:::o;232:191:15:-;311:4;369:47;220:5;369:23;:6;380:11;369:10;:23::i;:::-;:27;;:47::i;:::-;362:54;;232:191;;;;;:::o;882:176:2:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:2;;;;;;;;;;;;-1:-1:-1;;;986:46:2;;;;;;;;;;;;;;408:236:16;450:24;:22;:24::i;:::-;484:20;:18;:20::i;:::-;514:21;521:14;514:21;;;552:18;545:25;580:10;:36;;-1:-1:-1;;;;580:36:16;;;;600:15;580:36;;;;626:11;;;-1:-1:-1;626:11:16;;;;;;;;;;;408:236::o;1425:356:22:-;1506:6;1524:19;;:::i;:::-;1546:5;312:1;1546:12;;;;;;;;;;;;;;;;;;1524:34;;;;;;;;1546:12;;;;;;;;1524:34;;-1:-1:-1;;;;;1524:34:22;;;;-1:-1:-1;;;1524:34:22;;;;;;;;;;;-1:-1:-1;;;1524:34:22;;;;;;;;;;;;;;;;;-1:-1:-1;1598:154:22;1604:12;;;;:21;;;;;;:58;;;1657:5;1629;1635:7;:12;;;1629:19;;;;;;;;;;;;;;;;;;;;:25;;;:33;1604:58;1598:154;;;-1:-1:-1;1686:12:22;;;;1722:19;;:5;;:19;;;;;;;;;;;;;;;;;;;1712:29;;;;;;;;1722:19;;;;;;;;1712:29;;-1:-1:-1;;;;;1712:29:22;;;;-1:-1:-1;;;1712:29:22;;;;;;;;;;;-1:-1:-1;;;1712:29:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;1598:154:22;;;1769:5;1425:356;-1:-1:-1;;;;1425:356:22:o;1211:208::-;1303:4;1326:13;;;;;:86;;;1353:5;1359:4;1353:11;;;;;;;;;;;;;;;;;;;;:17;;;1344:5;:26;;:67;;;;;1382:5;1388;1394:4;1388:11;;;;;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1382:23;;;;;;;;;;;;;;;;;;;;:29;;;1374:5;:37;1319:93;1211:208;-1:-1:-1;;;;1211:208:22:o;1329:134:2:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;1787:501:22:-;1889:6;1897;1915:19;;:::i;:::-;1937:5;312:1;1937:12;;;;;;;;;;;;;;;;;;1915:34;;;;;;;;1937:12;;;;;;;;1915:34;;-1:-1:-1;;;;;1915:34:22;;;;-1:-1:-1;;;1915:34:22;;;;;;;;;;;-1:-1:-1;;;1915:34:22;;;;;;;;;;;;;;;;;-1:-1:-1;1937:12:22;2030:209;2036:12;;;;:21;;;;;;:68;;;2079:4;-1:-1:-1;;;;;2063:20:22;:7;:12;;;-1:-1:-1;;;;;2063:20:22;;:40;;;;;2101:2;2087:16;;:7;:10;;;:16;;;2063:40;2061:43;2036:68;2030:209;;;-1:-1:-1;2173:12:22;;;;2209:19;;2173:12;;2132;2209:5;;:19;;;;;;;;;;;;;;;;;;;2199:29;;;;;;;;2209:19;;;;;;;;2199:29;;-1:-1:-1;;;;;2199:29:22;;;;-1:-1:-1;;;2199:29:22;;;;;;;;;;;-1:-1:-1;;;2199:29:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;2030:209:22;;;2257:12;;;;-1:-1:-1;1787:501:22;-1:-1:-1;;;;;1787:501:22:o;2188:459:2:-;2246:7;2487:6;2483:45;;-1:-1:-1;2516:1:2;2509:8;;2483:45;2550:5;;;2554:1;2550;:5;:1;2573:5;;;;;:10;2565:56;;;;-1:-1:-1;;;2565:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3109:130;3167:7;3193:39;3197:1;3200;3193:39;;;;;;;;;;;;;-1:-1:-1;;;3193:39:2;;;:3;:39::i;349:137:18:-;402:23;409:16;;402:23;:::i;:::-;435:44;462:16;435:26;:44::i;1754:187:2:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:2;;;1754:187::o;3721:272::-;3807:7;3841:12;3834:5;3826:28;;;;-1:-1:-1;;;3826:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3864:9;3880:1;3876;:5;;;;;;;3721:272;-1:-1:-1;;;;;3721:272:2:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "uplinkAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "uplinkStakeId",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Exited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refPoolAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sponsorPoolAmount",
          "type": "uint256"
        }
      ],
      "name": "PoolDrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReInvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONTRACT_BONUS_PER_UNIT_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONTRACT_BONUS_UNIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEV_FEE_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXIT_PENALTY_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOLD_BONUS_PER_UNIT_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOLD_BONUS_UNIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LP_FEE_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_CONTRACT_BONUS_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_CONTRACT_REWARD_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_HOLD_BONUS_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_REF_POOL_USERS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSOR_POOL_USERS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAWAL_OVER_REWARD_THRESHOLD_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REF_COMMISSION_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REF_POOL_FEE_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REWARD_THRESHOLD_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SPONSOR_POOL_FEE_BP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "stakeId",
          "type": "uint8"
        }
      ],
      "name": "_addRefPoolRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_cleanRefPoolUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "drawPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fourRXToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolInfo",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolParticipants",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "",
          "type": "uint8[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "",
          "type": "uint8[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInInsuranceState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolCycle",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolDrewAt",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "refPoolBonuses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "refPoolUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "next",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "id",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sponsorPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sponsorPoolBonuses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sponsorPoolUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "next",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "id",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDepositRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalExited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/Insurance.sol",
    "exportedSymbols": {
      "Insurance": [
        3899
      ]
    },
    "id": 3900,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3745,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:13"
      },
      {
        "absolutePath": "contracts/RewardsAndPenalties.sol",
        "file": "./RewardsAndPenalties.sol",
        "id": 3746,
        "nodeType": "ImportDirective",
        "scope": 3900,
        "sourceUnit": 7128,
        "src": "58:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3747,
              "name": "RewardsAndPenalties",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7127,
              "src": "118:19:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RewardsAndPenalties_$7127",
                "typeString": "contract RewardsAndPenalties"
              }
            },
            "id": 3748,
            "nodeType": "InheritanceSpecifier",
            "src": "118:19:13"
          }
        ],
        "contractDependencies": [
          1893,
          1961,
          6147,
          6199,
          6641,
          6699,
          6738,
          7127,
          7203,
          7210,
          7616
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3899,
        "linearizedBaseContracts": [
          3899,
          7127,
          6641,
          7203,
          7616,
          6147,
          6199,
          1961,
          7210,
          1893,
          6699,
          6738
        ],
        "name": "Insurance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3751,
            "mutability": "constant",
            "name": "BASE_INSURANCE_FOR_BP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3899,
            "src": "144:50:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3749,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "144:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33353030",
              "id": 3750,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "190:4:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3500_by_1",
                "typeString": "int_const 3500"
              },
              "value": "3500"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 3754,
            "mutability": "constant",
            "name": "OPT_IN_INSURANCE_FEE_BP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3899,
            "src": "258:52:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3752,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "258:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 3753,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "306:4:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 3757,
            "mutability": "constant",
            "name": "OPT_IN_INSURANCE_FOR_BP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3899,
            "src": "323:53:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3755,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "323:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 3756,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "371:5:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "46c27f65",
            "id": 3760,
            "mutability": "mutable",
            "name": "isInInsuranceState",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3899,
            "src": "391:38:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3758,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "391:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 3759,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "424:5:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3786,
              "nodeType": "Block",
              "src": "551:227:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3767,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "595:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Insurance_$3899",
                                "typeString": "contract Insurance"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Insurance_$3899",
                                "typeString": "contract Insurance"
                              }
                            ],
                            "id": 3766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "587:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3765,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "587:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "587:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3763,
                          "name": "fourRXToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7150,
                          "src": "565:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$908",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 3764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 847,
                        "src": "565:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 3769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "565:36:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3771,
                          "name": "maxContractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7192,
                          "src": "621:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3772,
                          "name": "BASE_INSURANCE_FOR_BP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3751,
                          "src": "641:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3770,
                        "name": "_calcPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "605:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "605:58:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "565:98:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3784,
                    "nodeType": "Block",
                    "src": "721:51:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3780,
                            "name": "isInInsuranceState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3760,
                            "src": "735:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 3781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "756:5:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "735:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3783,
                        "nodeType": "ExpressionStatement",
                        "src": "735:26:13"
                      }
                    ]
                  },
                  "id": 3785,
                  "nodeType": "IfStatement",
                  "src": "561:211:13",
                  "trueBody": {
                    "id": 3779,
                    "nodeType": "Block",
                    "src": "665:50:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3775,
                            "name": "isInInsuranceState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3760,
                            "src": "679:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 3776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "700:4:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "679:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3778,
                        "nodeType": "ExpressionStatement",
                        "src": "679:25:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 3787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkForBaseInsuranceTrigger",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:2:13"
            },
            "returnParameters": {
              "id": 3762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:13"
            },
            "scope": 3899,
            "src": "501:277:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3858,
              "nodeType": "Block",
              "src": "896:792:13",
              "statements": [
                {
                  "assignments": [
                    3797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3797,
                      "mutability": "mutable",
                      "name": "availableAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3858,
                      "src": "906:20:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3796,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "906:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3799,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3798,
                    "name": "withdrawalAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3791,
                    "src": "929:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "906:39:13"
                },
                {
                  "assignments": [
                    3801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3801,
                      "mutability": "mutable",
                      "name": "insuredFor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3858,
                      "src": "1039:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3800,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1039:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3803,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3802,
                    "name": "BASE_INSURANCE_FOR_BP",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3751,
                    "src": "1057:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1039:39:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3804,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3789,
                      "src": "1092:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                        "typeString": "struct SharedVariables.Stake memory"
                      }
                    },
                    "id": 3805,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "optInInsured",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7159,
                    "src": "1092:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3811,
                  "nodeType": "IfStatement",
                  "src": "1088:85:13",
                  "trueBody": {
                    "id": 3810,
                    "nodeType": "Block",
                    "src": "1112:61:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3806,
                            "name": "insuredFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3801,
                            "src": "1126:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3807,
                            "name": "OPT_IN_INSURANCE_FOR_BP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3757,
                            "src": "1139:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1126:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3809,
                        "nodeType": "ExpressionStatement",
                        "src": "1126:36:13"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3813,
                      "mutability": "mutable",
                      "name": "maxWithdrawalAllowed",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3858,
                      "src": "1183:25:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3812,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1183:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3819,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3815,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3789,
                          "src": "1227:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                            "typeString": "struct SharedVariables.Stake memory"
                          }
                        },
                        "id": 3816,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7167,
                        "src": "1227:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3817,
                        "name": "insuredFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3801,
                        "src": "1242:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3814,
                      "name": "_calcPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6180,
                      "src": "1211:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1211:42:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1183:70:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3821,
                          "name": "maxWithdrawalAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3813,
                          "src": "1272:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3825,
                                "name": "stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3789,
                                "src": "1316:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                                  "typeString": "struct SharedVariables.Stake memory"
                                }
                              },
                              "id": 3826,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "penalty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7171,
                              "src": "1316:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3822,
                                "name": "stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3789,
                                "src": "1296:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                                  "typeString": "struct SharedVariables.Stake memory"
                                }
                              },
                              "id": 3823,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7169,
                              "src": "1296:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 160,
                            "src": "1296:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1296:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1272:58:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1264:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3830,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:67:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3837,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3789,
                            "src": "1507:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                              "typeString": "struct SharedVariables.Stake memory"
                            }
                          },
                          "id": 3838,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "penalty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7171,
                          "src": "1507:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3834,
                              "name": "availableAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3797,
                              "src": "1486:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3831,
                                "name": "stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3789,
                                "src": "1466:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                                  "typeString": "struct SharedVariables.Stake memory"
                                }
                              },
                              "id": 3832,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7169,
                              "src": "1466:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 160,
                            "src": "1466:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1466:36:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 160,
                        "src": "1466:40:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1466:55:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3840,
                      "name": "maxWithdrawalAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3813,
                      "src": "1524:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1466:78:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3855,
                  "nodeType": "IfStatement",
                  "src": "1462:187:13",
                  "trueBody": {
                    "id": 3854,
                    "nodeType": "Block",
                    "src": "1546:103:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3842,
                            "name": "availableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3797,
                            "src": "1560:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3849,
                                  "name": "stake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3789,
                                  "src": "1624:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                                    "typeString": "struct SharedVariables.Stake memory"
                                  }
                                },
                                "id": 3850,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "penalty",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7171,
                                "src": "1624:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3845,
                                      "name": "stake",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3789,
                                      "src": "1603:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                                        "typeString": "struct SharedVariables.Stake memory"
                                      }
                                    },
                                    "id": 3846,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "withdrawn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7169,
                                    "src": "1603:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3843,
                                    "name": "maxWithdrawalAllowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3813,
                                    "src": "1578:20:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 177,
                                  "src": "1578:24:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1578:41:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 177,
                              "src": "1578:45:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1578:60:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1560:78:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3853,
                        "nodeType": "ExpressionStatement",
                        "src": "1560:78:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3856,
                    "name": "availableAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3797,
                    "src": "1666:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3795,
                  "id": 3857,
                  "nodeType": "Return",
                  "src": "1659:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 3859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getInsuredAvailableAmount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3789,
                  "mutability": "mutable",
                  "name": "stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3859,
                  "src": "820:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$7174_memory_ptr",
                    "typeString": "struct SharedVariables.Stake"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3788,
                    "name": "Stake",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7174,
                    "src": "820:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$7174_storage_ptr",
                      "typeString": "struct SharedVariables.Stake"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3791,
                  "mutability": "mutable",
                  "name": "withdrawalAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3859,
                  "src": "840:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3790,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "819:43:13"
            },
            "returnParameters": {
              "id": 3795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3794,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3859,
                  "src": "886:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3793,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "885:6:13"
            },
            "scope": 3899,
            "src": "784:904:13",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3897,
              "nodeType": "Block",
              "src": "1760:218:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1778:19:13",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3867,
                              "name": "stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3863,
                              "src": "1779:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$7174_storage_ptr",
                                "typeString": "struct SharedVariables.Stake storage pointer"
                              }
                            },
                            "id": 3868,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "optInInsured",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7159,
                            "src": "1779:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3870,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3863,
                            "src": "1801:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$7174_storage_ptr",
                              "typeString": "struct SharedVariables.Stake storage pointer"
                            }
                          },
                          "id": 3871,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7157,
                          "src": "1801:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1778:35:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1770:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1770:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3874,
                  "nodeType": "ExpressionStatement",
                  "src": "1770:44:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3878,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3861,
                            "src": "1857:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3881,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1871:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Insurance_$3899",
                                  "typeString": "contract Insurance"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Insurance_$3899",
                                  "typeString": "contract Insurance"
                                }
                              ],
                              "id": 3880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1863:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3879,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1863:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 3882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1863:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3884,
                                  "name": "stake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3863,
                                  "src": "1894:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$7174_storage_ptr",
                                    "typeString": "struct SharedVariables.Stake storage pointer"
                                  }
                                },
                                "id": 3885,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7167,
                                "src": "1894:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 3886,
                                "name": "OPT_IN_INSURANCE_FEE_BP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3754,
                                "src": "1909:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3883,
                              "name": "_calcPercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6180,
                              "src": "1878:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1878:55:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3876,
                            "name": "fourRXToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7150,
                            "src": "1832:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$908",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "1832:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1832:102:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1824:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:111:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3890,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:111:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3891,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3863,
                        "src": "1946:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$7174_storage_ptr",
                          "typeString": "struct SharedVariables.Stake storage pointer"
                        }
                      },
                      "id": 3893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "optInInsured",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7159,
                      "src": "1946:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1967:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1946:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3896,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:25:13"
                }
              ]
            },
            "documentation": null,
            "id": 3898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_insureStake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3861,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3898,
                  "src": "1716:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3863,
                  "mutability": "mutable",
                  "name": "stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3898,
                  "src": "1730:19:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$7174_storage_ptr",
                    "typeString": "struct SharedVariables.Stake"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3862,
                    "name": "Stake",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7174,
                    "src": "1730:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$7174_storage_ptr",
                      "typeString": "struct SharedVariables.Stake"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1715:35:13"
            },
            "returnParameters": {
              "id": 3865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1760:0:13"
            },
            "scope": 3899,
            "src": "1694:284:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3900,
        "src": "96:1884:13"
      }
    ],
    "src": "32:1949:13"
  },
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101d85760003560e01c806303162d2c146101dd5780630781235a146101f75780630ac39f72146101ff5780630f9fa6aa146101f757806312dd5fe4146101f7578063195c41a01461020757806327cfe856146102115780633ad10ef6146102195780633df936c91461023d57806346c27f6514610245578063498dc5b5146102615780634e8cfa601461026957806360246c881461028757806363b815fa146102bf57806365fcb49e146102c757806369da94d8146102cf5780637247b2b9146102d75780637c841590146102df57806391994b2c146102e75780639b6eec7d146102ef5780639c236aa8146102f7578063a00d498014610349578063a0708a6414610351578063a13a801a14610386578063a87430ba1461038e578063a9122af7146103b4578063aaf1a0da14610386578063b7272841146103bc578063b963ddb414610571578063cabea10d14610579578063cd9a1b6314610598578063d5766ebd146105a0578063d82daec7146105bd578063d902f40c146105c5578063df5a75ef146105cd578063e5231411146105ea578063e7204ffb146105f2578063ed56f6a1146105fa578063f48e595a14610617578063fd0b82521461061f575b600080fd5b6101e5610640565b60408051918252519081900360200190f35b6101e5610646565b6101e561064c565b61020f610651565b005b6101e5610669565b610221610670565b604080516001600160a01b039092168252519081900360200190f35b6101e561067f565b61024d610685565b604080519115158252519081900360200190f35b6101e561068e565b610271610694565b6040805160ff9092168252519081900360200190f35b61028f610699565b6040805163ffffffff909516855261ffff9093166020850152838301919091526060830152519081900360800190f35b6101e56106b7565b6101e56106bd565b6101e56106c3565b6101e56106c9565b6102716106cf565b6101e56106d4565b6101e56106da565b6103146004803603602081101561030d57600080fd5b50356106e0565b604080516001600160a01b03909516855261ffff909316602085015260ff909116838301526060830152519081900360800190f35b6101e561072b565b61020f6004803603606081101561036757600080fd5b5080356001600160a01b0316906020810135906040013560ff16610730565b6101e5610764565b610221600480360360208110156103a457600080fd5b50356001600160a01b0316610769565b610221610784565b6103c4610793565b6040518080602001806020018060200180602001806020018060200187810387528d818151815260200191508051906020019060200280838360005b83811015610418578181015183820152602001610400565b5050505090500187810386528c818151815260200191508051906020019060200280838360005b8381101561045757818101518382015260200161043f565b5050505090500187810385528b818151815260200191508051906020019060200280838360005b8381101561049657818101518382015260200161047e565b5050505090500187810384528a818151815260200191508051906020019060200280838360005b838110156104d55781810151838201526020016104bd565b50505050905001878103835289818151815260200191508051906020019060200280838360005b838110156105145781810151838201526020016104fc565b50505050905001878103825288818151815260200191508051906020019060200280838360005b8381101561055357818101518382015260200161053b565b505050509050019c5050505050505050505050505060405180910390f35b6101e5610bb0565b610581610bb6565b6040805161ffff9092168252519081900360200190f35b6101e5610bc0565b6101e5600480360360208110156105b657600080fd5b5035610bc6565b6101e5610be4565b6101e5610bea565b6101e5600480360360208110156105e357600080fd5b5035610bef565b6101e5610bfc565b61020f610c01565b6103146004803603602081101561061057600080fd5b5035610fbd565b6101e5610fca565b610627610fcf565b6040805163ffffffff9092168252519081900360200190f35b61a8c081565b61012c81565b600281565b61065d60016000611a26565b6106676001610fe1565b565b6201518081565b6005546001600160a01b031681565b600c5481565b600e5460ff1681565b61138881565b600a81565b600a54600c54600b5463ffffffff620100008404169261ffff169293565b61271081565b60095481565b61924f81565b60025481565b600c81565b60035481565b6101f481565b600081815481106106ed57fe5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b820461ffff1691600160b01b900460ff169084565b600581565b61073c6001848361107c565b6107525761074d60018484846111b4565b61075f565b61075f60018484846112f1565b505050565b603281565b6006602052600090815260409020546001600160a01b031681565b6004546001600160a01b031681565b6060808080808080600a6040519080825280602002602001820160405280156107c6578160200160208202803683370190505b5060408051600a8082526101608201909252919250606091906020820161014080368337505060408051600a808252610160820190925292935060609291506020820161014080368337505060408051600c8082526101a0820190925292935060609291506020820161018080368337505060408051600c8082526101a0820190925292935060609291506020820161018080368337505060408051600c8082526101a08201909252929350606092915060208201610180803683370190505090506000610892611a4a565b60008261ffff16815481106108a357fe5b60009182526020918290206040805160808101825260029390930290910180546001600160a01b0381168452600160a01b810461ffff1694840194909452600160b01b90930460ff1690820152600190910154606082015290505b600a61ffff83161080156109195750602081015161ffff1615155b15610a17576000816020015161ffff168154811061093357fe5b60009182526020918290206040805160808101825260029390930290910180546001600160a01b038116808552600160a01b820461ffff90811696860196909652600160b01b90910460ff16928401929092526001015460608301528a51919350918a919085169081106109a357fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508060400151878361ffff16815181106109d857fe5b602002602001019060ff16908160ff16815250508060600151868361ffff1681518110610a0157fe5b60209081029190910101526001909101906108fe565b60018054600093508390610a2757fe5b60009182526020918290206040805160808101825260029390930290910180546001600160a01b0381168452600160a01b810461ffff1694840194909452600160b01b90930460ff1690820152600190910154606082015290505b600c61ffff8316108015610a9d5750602081015161ffff1615155b15610b9b576001816020015161ffff1681548110610ab757fe5b60009182526020918290206040805160808101825260029390930290910180546001600160a01b038116808552600160a01b820461ffff90811696860196909652600160b01b90910460ff16928401929092526001015460608301528751919350918791908516908110610b2757fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508060400151848361ffff1681518110610b5c57fe5b602002602001019060ff16908160ff16815250508060600151838361ffff1681518110610b8557fe5b6020908102919091010152600190910190610a82565b50959c949b5092995090975095509350915050565b61032081565b600a5461ffff1681565b600d5481565b60078181548110610bd357fe5b600091825260209091200154905081565b600b5481565b600181565b60088181548110610bd357fe5b606481565b600a546201518063ffffffff620100009092048216011642111561066757610c27611a4a565b6001600081548110610c3557fe5b600091825260208083206040805160808101825260029490940290910180546001600160a01b0381168552600160a01b810461ffff1693850193909352600160b01b90920460ff169083015260010154606082015291505b600c61ffff8216108015610ca85750602082015161ffff1615155b15610e01576001826020015161ffff1681548110610cc257fe5b600091825260209182902060408051608081018252600290930290910180546001600160a01b038116845261ffff600160a01b820481169585019590955260ff600160b01b9091041691830191909152600101546060820152600b5460078054929550610da793610d4993908616908110610d3957fe5b906000526020600020015461146a565b6006600085600001516001600160a01b03166001600160a01b03168152602001908152602001600020600101846040015160ff1681548110610d8757fe5b90600052602060002090600502016004015461148b90919063ffffffff16565b6006600084600001516001600160a01b03166001600160a01b03168152602001908152602001600020600101836040015160ff1681548110610de557fe5b6000918252602090912060046005909202010155600101610c8d565b60008081548110610e0e57fe5b600091825260208083206040805160808101825260029490940290910180546001600160a01b0381168552600160a01b810461ffff1693850193909352600160b01b90920460ff1690830152600101546060820152925090505b600a61ffff8216108015610e835750602082015161ffff1615155b15610f6e576000826020015161ffff1681548110610e9d57fe5b600091825260209182902060408051608081018252600290930290910180546001600160a01b038116845261ffff600160a01b820481169585019590955260ff600160b01b9091041691830191909152600101546060820152600c5460088054929550610f1493610d4993908616908110610d3957fe5b6006600084600001516001600160a01b03166001600160a01b03168152602001908152602001600020600101836040015160ff1681548110610f5257fe5b6000918252602090912060046005909202010155600101610e68565b7f505fb5b242804521f868b1210d5697cefabaa21c3f697207aa5c02dc549116e2600b54600c54604051808381526020018281526020019250505060405180910390a1610fb96114e3565b5050565b600181815481106106ed57fe5b60fa81565b600a5462010000900463ffffffff1681565b604080516080810182526000808252602080830182815293830182815260608401838152865460018181018955978552929093209351600290920290930180549451935160ff16600160b01b0260ff60b01b1961ffff95909516600160a01b0261ffff60a01b196001600160a01b03949094166001600160a01b03199097169690961792909216949094179290921691909117825551910155565b6000611086611a4a565b84600061ffff168154811061109757fe5b600091825260208083206040805160808101825260029490940290910180546001600160a01b0381168552600160a01b810461ffff1693850193909352600160b01b90920460ff169083015260010154606082015291505b602082015161ffff16156111ab57846001600160a01b031682600001516001600160a01b031614801561112b57508360ff16826040015160ff16145b15611138575060016111ab565b85826020015161ffff168154811061114c57fe5b60009182526020918290206040805160808101825260029390930290910180546001600160a01b0381168452600160a01b810461ffff1694840194909452600160b01b90930460ff1690820152600190910154606082015291506110ef565b95945050505050565b60006111c08584611531565b90506111cd858483611663565b6111d657600080fd5b846040518060800160405280866001600160a01b03168152602001878461ffff168154811061120157fe5b600091825260208083206002928302015461ffff600160a01b918290048116865260ff808b168785015260409687018c9052885460018181018b559987529584902088519690950290940180549388015196880151909416600160b01b0260ff60b01b199690911690910261ffff60a01b196001600160a01b039095166001600160a01b0319909316929092179390931617929092161781556060909101519082015585546112af916116f8565b858261ffff16815481106112bf57fe5b906000526020600020906002020160000160146101000a81548161ffff021916908361ffff1602179055505050505050565b6000806112ff86868561173a565b915091508161ffff16868261ffff168154811061131857fe5b6000918252602090912060029091020154600160a01b900461ffff161461133e57600080fd5b846001600160a01b0316868361ffff168154811061135857fe5b60009182526020909120600290910201546001600160a01b03161461137c57600080fd5b8260ff16868361ffff168154811061139057fe5b6000918252602090912060029091020154600160b01b900460ff16146113b557600080fd5b6113e9868361ffff16815481106113c857fe5b9060005260206000209060020201600101548561148b90919063ffffffff16565b9350858261ffff16815481106113fb57fe5b906000526020600020906002020160000160149054906101000a900461ffff16868261ffff168154811061142b57fe5b906000526020600020906002020160000160146101000a81548161ffff021916908361ffff160217905550611462868686866111b4565b505050505050565b600061148261271061147c858561187d565b906118d6565b90505b92915050565b600082820183811015611482576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b6114eb611915565b6114f3610651565b6000600b819055600c55600a805461ffff1965ffffffff000019909116620100004263ffffffff160217908116600161ffff92831601909116179055565b600061153b611a4a565b83600061ffff168154811061154c57fe5b600091825260208083206040805160808101825260029490940290910180546001600160a01b0381168552600160a01b810461ffff1693850193909352600160b01b90920460ff169083015260010154606082015291505b602082015161ffff16158015906115df57508385836020015161ffff16815481106115cb57fe5b906000526020600020906002020160010154115b1561165b575060208101518454859061ffff83169081106115fc57fe5b60009182526020918290206040805160808101825260029390930290910180546001600160a01b0381168452600160a01b810461ffff1694840194909452600160b01b90930460ff1690820152600190910154606082015291506115a4565b949350505050565b600061ffff8216158061165b5750838261ffff168154811061168157fe5b906000526020600020906002020160010154831115801561165b575083848361ffff16815481106116ae57fe5b906000526020600020906002020160000160149054906101000a900461ffff1661ffff16815481106116dc57fe5b9060005260206000209060020201600101548311949350505050565b600061148283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061192a565b600080611745611a4a565b85600061ffff168154811061175657fe5b600091825260208083206040805160808101825260029490940290910180546001600160a01b0381168552600160a01b810461ffff1693850193909352600160b01b90920460ff16908301526001015460608201529150805b602083015161ffff16158015906117f15750866001600160a01b031683600001516001600160a01b03161480156117ef57508560ff16836040015160ff16145b155b15611870575060208201518754909190889061ffff841690811061181157fe5b60009182526020918290206040805160808101825260029390930290910180546001600160a01b0381168452600160a01b810461ffff1694840194909452600160b01b90930460ff1690820152600190910154606082015292506117af565b9097909650945050505050565b60008261188c57506000611485565b8282028284828161189957fe5b04146114825760405162461bcd60e51b8152600401808060200182810382526021815260200180611a9c6021913960400191505060405180910390fd5b600061148283836040518060400160405280601a815260200179536166654d6174683a206469766973696f6e206279207a65726f60301b8152506119c1565b611920600080611a26565b6106676000610fe1565b600081848411156119b95760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561197e578181015183820152602001611966565b50505050905090810190601f1680156119ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183611a105760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561197e578181015183820152602001611966565b506000838581611a1c57fe5b0495945050505050565b5080546000825560020290600052602060002090810190611a479190611a71565b50565b60408051608081018252600080825260208201819052918101829052606081019190915290565b5b80821115611a975780546001600160b81b031916815560006001820155600201611a72565b509056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212204666691139ee8e0da378309ac59c07d2324d455bb435fc6b2b1d0cb81fec768c64736f6c634300060c0033",
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "evmVersion": "petersburg"
  }
}
